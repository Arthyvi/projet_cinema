/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vue;

import Contrôleur.*;
import Modele.Connexion;
import java.sql.SQLException;
import java.util.*;

/**
 *
 * @author Arthur
 */
public class Film_Infos extends javax.swing.JFrame {

    private Film movie;
    private Client User;

    private Connexion maconnexion;
    private String Buffer;

    /**
     * Creates new form Film_Infos
     */
    public Film_Infos() {
        initComponents();
        Liste<Personne> listeact = new Liste<>();
        Calendar date = Calendar.getInstance();
        date.set(2022, 03, 03);
        // listeact.Ajouter(new Personne("Robert", "Pattinson", MetierDuCinema.acteur, new Liste<Film>()));
        // listeact.Ajouter(new Personne("Zoë", "Kravitz", MetierDuCinema.acteur, new Liste<Film>()));
        // listeact.Ajouter(new Personne("Andy", "Serkis", MetierDuCinema.acteur, new Liste<Film>()));
        // movie = new Film("The Batman", date, "I'm vengence", "Etats-Unis", new Personne("Matt", "Reeves", MetierDuCinema.realisateur, new Liste<Film>()), listeact, 4, 180);

        titre.setText(movie.getNom());
        description.setText(movie.getDescription());
        infos.setText(movie.getDate().getWeekYear() + " , " + movie.getRealisateur().Get(0) + " , " + movie.getPays() + " , " + movie.getDuree() + " minutes");
        real1.setText(movie.getRealisateur().Get(0));
        acteur1.setText(movie.getActeurs().Get(0).toString());
        acteur2.setText(movie.getActeurs().Get(1).toString());
        acteur3.setText(movie.getActeurs().Get(2).toString());
        note.setValue(movie.getNote());
    }

    /**
     * Creates new form Film_Infos
     *
     * @param mov
     */
    public Film_Infos(Film mov, Client theUser) {
        initComponents();
        movie = mov;
        String[] Buffer2;

        titre.setText(movie.getNom());
        description.setText(movie.getDescription());
        infos.setText(movie.getDate().get(movie.getDate().DATE) + " " + Utilitaires.getMonth(movie.getDate().get(movie.getDate().MONTH)) + " " + movie.getDate().getWeekYear() + " , " + movie.getRealisateur().Get(0) + " , " + movie.getPays() + " , " + movie.getDuree() + " minutes");
        real1.setText(movie.getRealisateur().Get(0));

        acteur1.setText(movie.getActeurs().Get(0).toString());
        acteur2.setText(movie.getActeurs().Get(1).toString());
        acteur3.setText(movie.getActeurs().Get(2).toString());
        note.setValue(movie.getNote());
        affiche.setIcon(movie.getAffiche());

        User = theUser;

        // Change option for user
        if ((User.getPrenom() == "NoAccountUser") && (User.getNom() == "") && (User.getEmail() == "noMail") && (User.getPassword() == "noPassword")) {
            jComboBox1.removeAllItems();
            jComboBox1.addItem("Se déconnecter");

            jCheckBoxFavori.hide();

        } else {
            // On verifit si le film est en favori
            boolean alreadyInList = false;
            try {
                maconnexion = new Connexion("projetpoojava", "root", "");

                ArrayList<ArrayList<String>> ListBuffer = maconnexion.executeRequete("SELECT ListFilms FROM clients WHERE email= '" + theUser.getEmail() + "';");

                Buffer = ListBuffer.get(0).get(0);
               
                if (Buffer != "") {
                    Buffer2 = Buffer.split(",");
                    

                    for (String IDfilm : Buffer2) {

                        if (IDfilm == null ? movie.getID() == null : IDfilm.equals(movie.getID())) {
                           
                            alreadyInList = true;
                            break;
                        }
                        
                    }
                }

            } catch (SQLException e) {
                System.out.println(e.getMessage());
            } catch (ClassNotFoundException e) {
                System.out.println(e.getMessage());
            }

            jCheckBoxFavori.setSelected(alreadyInList);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titre = new javax.swing.JLabel();
        infos = new javax.swing.JLabel();
        note = new javax.swing.JProgressBar(0,5);
        jLabel4 = new javax.swing.JLabel();
        acteur1 = new javax.swing.JLabel();
        acteur2 = new javax.swing.JLabel();
        acteur3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        real1 = new javax.swing.JLabel();
        boutton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        description = new javax.swing.JTextArea();
        affiche = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jCheckBoxFavori = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(900, 600));
        setSize(new java.awt.Dimension(900, 600));
        getContentPane().setLayout(null);

        titre.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        titre.setText("TITRE");
        getContentPane().add(titre);
        titre.setBounds(226, 84, 568, 44);

        infos.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        infos.setText("Date, Réalisateur, durée");
        getContentPane().add(infos);
        infos.setBounds(226, 149, 560, 22);

        note.setForeground(new java.awt.Color(255, 201, 14));
        getContentPane().add(note);
        note.setBounds(20, 420, 177, 33);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Acteurs principaux :");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(226, 350, 157, 22);

        acteur1.setText("Acteur 1");
        getContentPane().add(acteur1);
        acteur1.setBounds(400, 352, 170, 16);

        acteur2.setText("Acteur 2");
        getContentPane().add(acteur2);
        acteur2.setBounds(400, 393, 170, 16);

        acteur3.setText("Acteur 3");
        getContentPane().add(acteur3);
        acteur3.setBounds(400, 438, 170, 16);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Réalisateur : ");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(226, 300, 105, 22);

        real1.setText("Réalisateur");
        getContentPane().add(real1);
        real1.setBounds(347, 302, 230, 16);

        boutton.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        boutton.setText("Réserver ma place");
        boutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bouttonActionPerformed(evt);
            }
        });
        getContentPane().add(boutton);
        boutton.setBounds(575, 435, 210, 33);

        description.setEditable(false);
        description.setColumns(20);
        description.setRows(5);
        jScrollPane1.setViewportView(description);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(226, 192, 568, 100);

        affiche.setText("jLabel1");
        getContentPane().add(affiche);
        affiche.setBounds(10, 90, 200, 290);

        jButton4.setText("Voir les films");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(0, 50, 225, 25);

        jButton1.setText("Voir les acteurs");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(220, 50, 225, 25);

        jButton2.setText("Accueil");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(660, 50, 225, 25);

        jButton3.setText("Voir les réalisateurs");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(440, 50, 225, 25);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mon compte", "Voir mon profil", "Mes films ", "Prochaines séances", "Se déconnecter" }));
        jComboBox1.setToolTipText("");
        jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox1MouseClicked(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(660, 10, 220, 22);

        jCheckBoxFavori.setText("Favoris ?");
        jCheckBoxFavori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxFavoriActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBoxFavori);
        jCheckBoxFavori.setBounds(780, 90, 110, 40);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bouttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bouttonActionPerformed
        Reserver window = new Reserver(movie, User);
        window.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_bouttonActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        TousLesFilms filo = new TousLesFilms(0, User);
        filo.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Accueil_Client window = new Accueil_Client(User);
        window.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if (jComboBox1.getSelectedIndex() != 0) {
            switch (jComboBox1.getSelectedIndex()) {
                case 1: // voir mon profil
                    Profil window = new Profil(User);
                    window.setVisible(true);
                    this.dispose();
                    break;
                case 2: // voir mes films
                    VoirMesFilms window2 = new VoirMesFilms(User);
                    window2.setVisible(true);
                    this.dispose();
                    break;
                case 3: // voir mes scéances
                   // MesSeances window3 = new MesSeances();
                   // window3.setVisible(true);
                   // this.dispose();
                    break;

                case 4: // deconnexion

                    Identification theWindow3 = new Identification();
                    theWindow3.setVisible(true);

                    this.dispose();
                    break;

                default:
                    break;
            }
        }

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        TousLesFilms filo = new TousLesFilms(1, User);
        filo.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        TousLesFilms filo = new TousLesFilms(2, User);
        filo.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseClicked
        if ((User.getPrenom() == "NoAccountUser") && (User.getNom() == "") && (User.getEmail() == "noMail") && (User.getPassword() == "noPassword")) {
            Identification theWindow3 = new Identification();
            theWindow3.setVisible(true);
            this.dispose();
        }
        
    }//GEN-LAST:event_jComboBox1MouseClicked

    private void jCheckBoxFavoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxFavoriActionPerformed

        String NewBuff = "";
        
        if (jCheckBoxFavori.isSelected()) {

            try {
                
                if( Buffer != "")
                {
                    NewBuff = Buffer + "," + movie.getID();
                }
                else
                {
                     NewBuff = movie.getID();
                }
                

                maconnexion.executeUpdate("UPDATE clients SET ListFilms ='" + NewBuff + "' WHERE email= '" + User.getEmail() + "';");

            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
        } else 
        {
            
             try {
                 
                  if (Buffer != "") {
                    String [] Buffer2 = Buffer.split(",");
                    

                    for (String IDfilm : Buffer2) {

                        if (!IDfilm.equals(movie.getID())) {
                            NewBuff += IDfilm +",";
                        }
                    }
                    
                    if(NewBuff != "")
                    {
                        NewBuff = NewBuff.substring(0,NewBuff.length()-1 );
                    }
                    
                }
                 
                maconnexion.executeUpdate("UPDATE clients SET ListFilms ='" + NewBuff + "' WHERE email= '" + User.getEmail() + "';");

            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }

        }
    }//GEN-LAST:event_jCheckBoxFavoriActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Film_Infos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Film_Infos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Film_Infos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Film_Infos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Film_Infos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel acteur1;
    private javax.swing.JLabel acteur2;
    private javax.swing.JLabel acteur3;
    private javax.swing.JLabel affiche;
    private javax.swing.JButton boutton;
    private javax.swing.JTextArea description;
    private javax.swing.JLabel infos;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBoxFavori;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JProgressBar note;
    private javax.swing.JLabel real1;
    private javax.swing.JLabel titre;
    // End of variables declaration//GEN-END:variables

}
